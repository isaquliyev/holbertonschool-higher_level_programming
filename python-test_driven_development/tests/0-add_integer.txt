The ``0. Integers addition`` module
=================================

Using ``add_integer``
---------------------



This is an example text file. First import ``add_integer``:
===========================================================
>>> add_integer = __import__('0-add_integer').add_integer


Test case: 4 regular case that return normal output:
====================================================
>>> add_integer(1, 2)
3

>>> add_integer(1)
99

>>> add_integer(3.2, 2)
5

>>> add_integer(6, -3)
3


Test case: 5 case that trigger exceptions:
==========================================
>>> add_integer("salam", 1)
Traceback (most recent call last):
	...
TypeError: a must be an integer

>>> add_integer(3, "salam")
Traceback (most recent call last):
        ...
TypeError: b must be an integer

>>> add_integer(3, float('inf'))
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

>>> add_integer(3, float('NaN'))
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer
